// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Certbot2acmPolicyC37CA3B3": {
      "Properties": {
        "Description": "Allow the Certbot function to import and list certificates.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:ListCertificates",
                "acm:ImportCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "acm:DescribeCertificate",
              "Effect": "Allow",
              "Resource": "arn:aws:acm:us-east-1:123456789012:certificate/*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot2bucket15AF13C6": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 1,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "Certbot2bucketPolicyF5044957": {
      "Properties": {
        "Bucket": {
          "Ref": "Certbot2bucket15AF13C6",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Certbot2bucket15AF13C6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Certbot2bucket15AF13C6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "Certbot2handlerDD5B6BD6": {
      "DependsOn": [
        "Certbot2roleDefaultPolicyD41BA24B",
        "Certbot2role947EDF69",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "REMOVED-BECAUSE-WE-ARE-NOT-INTERESTED-IN-LAMBDA-CODE-HASH-IN-THIS-TEST",
        },
        "Description": "Certbot Renewal Lambda for domain test2.local",
        "Environment": {
          "Variables": {
            "CERTIFICATE_BUCKET": {
              "Ref": "Certbot2bucket15AF13C6",
            },
            "CERTIFICATE_STORAGE": "s3",
            "DRY_RUN": "False",
            "KEY_TYPE": "ecdsa",
            "LETSENCRYPT_DOMAINS": "test2.local, www.test2.local",
            "LETSENCRYPT_EMAIL": "test@test2.local",
            "NOTIFICATION_SNS_ARN": {
              "Ref": "Certbot2topic395A9DCD",
            },
            "OBJECT_PREFIX": "",
            "PREFERRED_CHAIN": "None",
            "REISSUE_DAYS": "30",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "Certbot2role947EDF69",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Certbot2r53Policy92D86BDE": {
      "Properties": {
        "Description": "Allow the Certbot function to perform DNS verification.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "route53:ListHostedZones",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "route53:GetChange",
                "route53:ChangeResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:route53:::change/*",
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/DUMMY",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/",
                      {
                        "Ref": "ZoneA5DE4B68",
                      },
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot2role947EDF69": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Ref": "Certbot2snsPolicy34AF5BB6",
          },
          {
            "Ref": "Certbot2r53Policy92D86BDE",
          },
          {
            "Ref": "Certbot2acmPolicyC37CA3B3",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Certbot2roleDefaultPolicyD41BA24B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Certbot2bucket15AF13C6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Certbot2bucket15AF13C6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "Certbot2roleDefaultPolicyD41BA24B",
        "Roles": [
          {
            "Ref": "Certbot2role947EDF69",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Certbot2snsPolicy34AF5BB6": {
      "Properties": {
        "Description": "Allow the Certbot function to notify an SNS topic upon completion.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "Certbot2topic395A9DCD",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot2topic395A9DCD": {
      "Type": "AWS::SNS::Topic",
    },
    "Certbot2topictesttest2localAF8994D0": {
      "Properties": {
        "Endpoint": "test@test2.local",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "Certbot2topic395A9DCD",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "Certbot2triggerA0C0D9CA": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 ? * 1 *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Certbot2handlerDD5B6BD6",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "Certbot2triggerAllowEventRuleTestStackCertbot2handler0C9B784E8CC7BD79": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Certbot2handlerDD5B6BD6",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Certbot2triggerA0C0D9CA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Certbot2triggerImmediateAllowEventRuleTestStackCertbot2handler0C9B784E1442FE9C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Certbot2handlerDD5B6BD6",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Certbot2triggerImmediateE4EA1F78",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Certbot2triggerImmediateE4EA1F78": {
      "Properties": {
        "ScheduleExpression": "cron(10 0 14 1 ? 2021)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Certbot2handlerDD5B6BD6",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "Certbot3acmPolicyEB8711A3": {
      "Properties": {
        "Description": "Allow the Certbot function to import and list certificates.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:ListCertificates",
                "acm:ImportCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "acm:DescribeCertificate",
              "Effect": "Allow",
              "Resource": "arn:aws:acm:us-east-1:123456789012:certificate/*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot3handler209B83F5": {
      "DependsOn": [
        "Certbot3role650AD6C3",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "REMOVED-BECAUSE-WE-ARE-NOT-INTERESTED-IN-LAMBDA-CODE-HASH-IN-THIS-TEST",
        },
        "Description": "Certbot Renewal Lambda for domain test3.local",
        "Environment": {
          "Variables": {
            "CERTIFICATE_SECRET_PATH": "/certbot/certificates/test3.local/",
            "CERTIFICATE_STORAGE": "secretsmanager",
            "DRY_RUN": "False",
            "KEY_TYPE": "ecdsa",
            "LETSENCRYPT_DOMAINS": "test3.local, www.test3.local",
            "LETSENCRYPT_EMAIL": "test@test3.local",
            "NOTIFICATION_SNS_ARN": {
              "Ref": "Certbot3topic1D6F86D3",
            },
            "OBJECT_PREFIX": "",
            "PREFERRED_CHAIN": "None",
            "REISSUE_DAYS": "30",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "Certbot3role650AD6C3",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Certbot3r53Policy56156B49": {
      "Properties": {
        "Description": "Allow the Certbot function to perform DNS verification.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "route53:ListHostedZones",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "route53:GetChange",
                "route53:ChangeResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:route53:::change/*",
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/DUMMY",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/",
                      {
                        "Ref": "ZoneA5DE4B68",
                      },
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot3role650AD6C3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Ref": "Certbot3snsPolicy1D9E6026",
          },
          {
            "Ref": "Certbot3r53Policy56156B49",
          },
          {
            "Ref": "Certbot3acmPolicyEB8711A3",
          },
          {
            "Ref": "Certbot3secretsManagerPolicy943A0ACD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Certbot3secretsManagerPolicy943A0ACD": {
      "Properties": {
        "Description": "",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:CreateSecret",
                "secretsmanager:DeleteSecret",
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetSecretValue",
                "secretsmanager:ListSecrets",
                "secretsmanager:PutSecretValue",
                "secretsmanager:UpdateSecret",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:secretsmanager:us-east-1:123456789012:secret:/certbot/certificates/test3.local/*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:us-east-1:123456789012:alias/aws/secretsmanager",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot3snsPolicy1D9E6026": {
      "Properties": {
        "Description": "Allow the Certbot function to notify an SNS topic upon completion.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "Certbot3topic1D6F86D3",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot3topic1D6F86D3": {
      "Type": "AWS::SNS::Topic",
    },
    "Certbot3topictesttest3local57C81B78": {
      "Properties": {
        "Endpoint": "test@test3.local",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "Certbot3topic1D6F86D3",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "Certbot3triggerAllowEventRuleTestStackCertbot3handler2F75392112ED02DD": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Certbot3handler209B83F5",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Certbot3triggerCFF93877",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Certbot3triggerCFF93877": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 ? * 1 *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Certbot3handler209B83F5",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "Certbot3triggerImmediateAllowEventRuleTestStackCertbot3handler2F75392155692E82": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Certbot3handler209B83F5",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Certbot3triggerImmediateF94A9166",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Certbot3triggerImmediateF94A9166": {
      "Properties": {
        "ScheduleExpression": "cron(10 0 14 1 ? 2021)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Certbot3handler209B83F5",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "Certbot4acmPolicy14C7C708": {
      "Properties": {
        "Description": "Allow the Certbot function to import and list certificates.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:ListCertificates",
                "acm:ImportCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "acm:DescribeCertificate",
              "Effect": "Allow",
              "Resource": "arn:aws:acm:us-east-1:123456789012:certificate/*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot4handler9E5C2F8B": {
      "DependsOn": [
        "Certbot4roleCDF970B1",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "REMOVED-BECAUSE-WE-ARE-NOT-INTERESTED-IN-LAMBDA-CODE-HASH-IN-THIS-TEST",
        },
        "Description": "Certbot Renewal Lambda for domain test4.local",
        "Environment": {
          "Variables": {
            "CERTIFICATE_SECRET_PATH": "/certbot/certificates/test4.local/",
            "CERTIFICATE_STORAGE": "secretsmanager",
            "CUSTOM_KMS_KEY_ID": "alias/test",
            "DRY_RUN": "False",
            "KEY_TYPE": "ecdsa",
            "LETSENCRYPT_DOMAINS": "test4.local, www.test4.local",
            "LETSENCRYPT_EMAIL": "test@test4.local",
            "NOTIFICATION_SNS_ARN": {
              "Ref": "Certbot4topic76531857",
            },
            "OBJECT_PREFIX": "",
            "PREFERRED_CHAIN": "None",
            "REISSUE_DAYS": "30",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "Certbot4roleCDF970B1",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Certbot4r53Policy2214C19B": {
      "Properties": {
        "Description": "Allow the Certbot function to perform DNS verification.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "route53:ListHostedZones",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "route53:GetChange",
                "route53:ChangeResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:route53:::change/*",
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/DUMMY",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/",
                      {
                        "Ref": "ZoneA5DE4B68",
                      },
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot4roleCDF970B1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Ref": "Certbot4snsPolicyD4A9E786",
          },
          {
            "Ref": "Certbot4r53Policy2214C19B",
          },
          {
            "Ref": "Certbot4acmPolicy14C7C708",
          },
          {
            "Ref": "Certbot4secretsManagerPolicy86953285",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Certbot4secretsManagerPolicy86953285": {
      "Properties": {
        "Description": "",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:CreateSecret",
                "secretsmanager:DeleteSecret",
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetSecretValue",
                "secretsmanager:ListSecrets",
                "secretsmanager:PutSecretValue",
                "secretsmanager:UpdateSecret",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:secretsmanager:us-east-1:123456789012:secret:/certbot/certificates/test4.local/*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:us-east-1:123456789012:alias/test",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot4snsPolicyD4A9E786": {
      "Properties": {
        "Description": "Allow the Certbot function to notify an SNS topic upon completion.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "Certbot4topic76531857",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot4topic76531857": {
      "Type": "AWS::SNS::Topic",
    },
    "Certbot4topictesttest4localED1A0549": {
      "Properties": {
        "Endpoint": "test@test4.local",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "Certbot4topic76531857",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "Certbot4triggerAllowEventRuleTestStackCertbot4handlerAC6D89582016CDD4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Certbot4handler9E5C2F8B",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Certbot4triggerF7B3A775",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Certbot4triggerF7B3A775": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 ? * 1 *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Certbot4handler9E5C2F8B",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "Certbot4triggerImmediateA1AD5D75": {
      "Properties": {
        "ScheduleExpression": "cron(10 0 14 1 ? 2021)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Certbot4handler9E5C2F8B",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "Certbot4triggerImmediateAllowEventRuleTestStackCertbot4handlerAC6D8958F5D23DCC": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Certbot4handler9E5C2F8B",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Certbot4triggerImmediateA1AD5D75",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Certbot5acmPolicy9282E578": {
      "Properties": {
        "Description": "Allow the Certbot function to import and list certificates.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:ListCertificates",
                "acm:ImportCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "acm:DescribeCertificate",
              "Effect": "Allow",
              "Resource": "arn:aws:acm:us-east-1:123456789012:certificate/*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot5handlerF08FFF65": {
      "DependsOn": [
        "Certbot5roleF9851B9B",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "REMOVED-BECAUSE-WE-ARE-NOT-INTERESTED-IN-LAMBDA-CODE-HASH-IN-THIS-TEST",
        },
        "Description": "Certbot Renewal Lambda for domain test5.local",
        "Environment": {
          "Variables": {
            "CERTIFICATE_PARAMETER_PATH": "/certbot/certificates/test5.local/",
            "CERTIFICATE_STORAGE": "ssm_secure",
            "DRY_RUN": "False",
            "KEY_TYPE": "ecdsa",
            "LETSENCRYPT_DOMAINS": "test5.local, www.test5.local",
            "LETSENCRYPT_EMAIL": "test@test5.local",
            "NOTIFICATION_SNS_ARN": {
              "Ref": "Certbot5topic9F8D3AA7",
            },
            "OBJECT_PREFIX": "",
            "PREFERRED_CHAIN": "None",
            "REISSUE_DAYS": "30",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "Certbot5roleF9851B9B",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Certbot5r53PolicyB6DCE7CB": {
      "Properties": {
        "Description": "Allow the Certbot function to perform DNS verification.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "route53:ListHostedZones",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "route53:GetChange",
                "route53:ChangeResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:route53:::change/*",
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/DUMMY",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/",
                      {
                        "Ref": "ZoneA5DE4B68",
                      },
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot5roleF9851B9B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Ref": "Certbot5snsPolicy504027F9",
          },
          {
            "Ref": "Certbot5r53PolicyB6DCE7CB",
          },
          {
            "Ref": "Certbot5acmPolicy9282E578",
          },
          {
            "Ref": "Certbot5ssmPolicyA94F2710",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Certbot5snsPolicy504027F9": {
      "Properties": {
        "Description": "Allow the Certbot function to notify an SNS topic upon completion.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "Certbot5topic9F8D3AA7",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot5ssmPolicyA94F2710": {
      "Properties": {
        "Description": "",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": "arn:aws:ssm:us-east-1:123456789012:parameter/certbot/certificates/test5.local/*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:us-east-1:123456789012:alias/aws/ssm",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot5topic9F8D3AA7": {
      "Type": "AWS::SNS::Topic",
    },
    "Certbot5topictesttest5local5E1B5E3D": {
      "Properties": {
        "Endpoint": "test@test5.local",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "Certbot5topic9F8D3AA7",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "Certbot5triggerAllowEventRuleTestStackCertbot5handler0F02814B101C2FEC": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Certbot5handlerF08FFF65",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Certbot5triggerF1F8B5D8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Certbot5triggerF1F8B5D8": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 ? * 1 *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Certbot5handlerF08FFF65",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "Certbot5triggerImmediate3FF9395A": {
      "Properties": {
        "ScheduleExpression": "cron(10 0 14 1 ? 2021)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Certbot5handlerF08FFF65",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "Certbot5triggerImmediateAllowEventRuleTestStackCertbot5handler0F02814B4258AD91": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Certbot5handlerF08FFF65",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Certbot5triggerImmediate3FF9395A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Certbot6acmPolicy5052A88E": {
      "Properties": {
        "Description": "Allow the Certbot function to import and list certificates.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:ListCertificates",
                "acm:ImportCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "acm:DescribeCertificate",
              "Effect": "Allow",
              "Resource": "arn:aws:acm:us-east-1:123456789012:certificate/*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot6handlerD6A58872": {
      "DependsOn": [
        "Certbot6role1843873F",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "REMOVED-BECAUSE-WE-ARE-NOT-INTERESTED-IN-LAMBDA-CODE-HASH-IN-THIS-TEST",
        },
        "Description": "Certbot Renewal Lambda for domain test6.local",
        "Environment": {
          "Variables": {
            "CERTIFICATE_PARAMETER_PATH": "/certbot/certificates/test6.local/",
            "CERTIFICATE_STORAGE": "ssm_secure",
            "CUSTOM_KMS_KEY_ID": "alias/test",
            "DRY_RUN": "False",
            "KEY_TYPE": "ecdsa",
            "LETSENCRYPT_DOMAINS": "test6.local, www.test6.local",
            "LETSENCRYPT_EMAIL": "test@test6.local",
            "NOTIFICATION_SNS_ARN": {
              "Ref": "Certbot6topic26480D34",
            },
            "OBJECT_PREFIX": "",
            "PREFERRED_CHAIN": "None",
            "REISSUE_DAYS": "30",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "Certbot6role1843873F",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Certbot6r53Policy647E091A": {
      "Properties": {
        "Description": "Allow the Certbot function to perform DNS verification.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "route53:ListHostedZones",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "route53:GetChange",
                "route53:ChangeResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:route53:::change/*",
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/DUMMY",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/",
                      {
                        "Ref": "ZoneA5DE4B68",
                      },
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot6role1843873F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Ref": "Certbot6snsPolicy5FC3F235",
          },
          {
            "Ref": "Certbot6r53Policy647E091A",
          },
          {
            "Ref": "Certbot6acmPolicy5052A88E",
          },
          {
            "Ref": "Certbot6ssmPolicyA7CD83E3",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Certbot6snsPolicy5FC3F235": {
      "Properties": {
        "Description": "Allow the Certbot function to notify an SNS topic upon completion.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "Certbot6topic26480D34",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot6ssmPolicyA7CD83E3": {
      "Properties": {
        "Description": "",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": "arn:aws:ssm:us-east-1:123456789012:parameter/certbot/certificates/test6.local/*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:us-east-1:123456789012:alias/test",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot6topic26480D34": {
      "Type": "AWS::SNS::Topic",
    },
    "Certbot6topictesttest6local90838D49": {
      "Properties": {
        "Endpoint": "test@test6.local",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "Certbot6topic26480D34",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "Certbot6triggerAllowEventRuleTestStackCertbot6handler505405305E03955F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Certbot6handlerD6A58872",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Certbot6triggerB07CAACF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Certbot6triggerB07CAACF": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 ? * 1 *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Certbot6handlerD6A58872",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "Certbot6triggerImmediate2E81CCDF": {
      "Properties": {
        "ScheduleExpression": "cron(10 0 14 1 ? 2021)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Certbot6handlerD6A58872",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "Certbot6triggerImmediateAllowEventRuleTestStackCertbot6handler505405308F953C97": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Certbot6handlerD6A58872",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Certbot6triggerImmediate2E81CCDF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Certbot7acmPolicyE09962E9": {
      "Properties": {
        "Description": "Allow the Certbot function to import and list certificates.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:ListCertificates",
                "acm:ImportCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "acm:DescribeCertificate",
              "Effect": "Allow",
              "Resource": "arn:aws:acm:us-east-1:123456789012:certificate/*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot7handler783F3BCF": {
      "DependsOn": [
        "Certbot7roleDefaultPolicy5A54E923",
        "Certbot7role3486B307",
        "EfsFileSystemEfsMountTarget1FB1E892A",
        "EfsFileSystemEfsMountTarget26C9652B8",
        "EfsFileSystemEfsSecurityGroupfromTestStackCertbot7handlerSecurityGroup2CE8F2482049DEF3190B",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "REMOVED-BECAUSE-WE-ARE-NOT-INTERESTED-IN-LAMBDA-CODE-HASH-IN-THIS-TEST",
        },
        "Description": "Certbot Renewal Lambda for domain test7.local",
        "Environment": {
          "Variables": {
            "CERTIFICATE_STORAGE": "efs",
            "DRY_RUN": "False",
            "EFS_PATH": "/mnt/efs",
            "KEY_TYPE": "ecdsa",
            "LETSENCRYPT_DOMAINS": "test7.local, www.test7.local",
            "LETSENCRYPT_EMAIL": "test@test7.local",
            "NOTIFICATION_SNS_ARN": {
              "Ref": "Certbot7topic29F3056A",
            },
            "OBJECT_PREFIX": "",
            "PREFERRED_CHAIN": "None",
            "REISSUE_DAYS": "30",
          },
        },
        "FileSystemConfigs": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":elasticfilesystem:us-east-1:123456789012:access-point/",
                  {
                    "Ref": "EfsAccessPoint787A4929",
                  },
                ],
              ],
            },
            "LocalMountPath": "/mnt/efs",
          },
        ],
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "Certbot7role3486B307",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Timeout": 180,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "Certbot7handlerSecurityGroupF7301350",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "VpcPrivateSubnet1Subnet536B997A",
            },
            {
              "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "Certbot7handlerSecurityGroupF7301350": {
      "DependsOn": [
        "EfsFileSystemEfsMountTarget1FB1E892A",
        "EfsFileSystemEfsMountTarget26C9652B8",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function TestStackCertbot7handlerD2953A09",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Certbot7r53Policy5F398121": {
      "Properties": {
        "Description": "Allow the Certbot function to perform DNS verification.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "route53:ListHostedZones",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "route53:GetChange",
                "route53:ChangeResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:route53:::change/*",
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/DUMMY",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/",
                      {
                        "Ref": "ZoneA5DE4B68",
                      },
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot7role3486B307": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Ref": "Certbot7snsPolicyFB8DE6C4",
          },
          {
            "Ref": "Certbot7r53Policy5F398121",
          },
          {
            "Ref": "Certbot7acmPolicyE09962E9",
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Certbot7roleDefaultPolicy5A54E923": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "elasticfilesystem:ClientMount",
              "Condition": {
                "StringEquals": {
                  "elasticfilesystem:AccessPointArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":elasticfilesystem:us-east-1:123456789012:access-point/",
                        {
                          "Ref": "EfsAccessPoint787A4929",
                        },
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "elasticfilesystem:ClientWrite",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":elasticfilesystem:us-east-1:123456789012:file-system/",
                    {
                      "Ref": "EfsFileSystem37910666",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "Certbot7roleDefaultPolicy5A54E923",
        "Roles": [
          {
            "Ref": "Certbot7role3486B307",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Certbot7snsPolicyFB8DE6C4": {
      "Properties": {
        "Description": "Allow the Certbot function to notify an SNS topic upon completion.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "Certbot7topic29F3056A",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbot7topic29F3056A": {
      "Type": "AWS::SNS::Topic",
    },
    "Certbot7topictesttest7local7692AF4E": {
      "Properties": {
        "Endpoint": "test@test7.local",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "Certbot7topic29F3056A",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "Certbot7triggerAllowEventRuleTestStackCertbot7handlerD2953A09CE571204": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Certbot7handler783F3BCF",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Certbot7triggerD7634811",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Certbot7triggerD7634811": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 ? * 1 *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Certbot7handler783F3BCF",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "Certbot7triggerImmediate394232D4": {
      "Properties": {
        "ScheduleExpression": "cron(10 0 14 1 ? 2021)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Certbot7handler783F3BCF",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "Certbot7triggerImmediateAllowEventRuleTestStackCertbot7handlerD2953A09DC236C7E": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Certbot7handler783F3BCF",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Certbot7triggerImmediate394232D4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CertbotacmPolicy047B0647": {
      "Properties": {
        "Description": "Allow the Certbot function to import and list certificates.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:ListCertificates",
                "acm:ImportCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "acm:DescribeCertificate",
              "Effect": "Allow",
              "Resource": "arn:aws:acm:us-east-1:123456789012:certificate/*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbotbucket4B0141F9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 1,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CertbotbucketPolicy2B76343E": {
      "Properties": {
        "Bucket": {
          "Ref": "Certbotbucket4B0141F9",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Certbotbucket4B0141F9",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Certbotbucket4B0141F9",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CertbothandlerD1E99A6A": {
      "DependsOn": [
        "CertbotroleDefaultPolicy6B0533F6",
        "Certbotrole7718327E",
      ],
      "Properties": {
        "Architectures": [
          "x86_64",
        ],
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "REMOVED-BECAUSE-WE-ARE-NOT-INTERESTED-IN-LAMBDA-CODE-HASH-IN-THIS-TEST",
        },
        "Description": "Certbot Renewal Lambda for domain test.local",
        "Environment": {
          "Variables": {
            "CERTIFICATE_BUCKET": {
              "Ref": "Certbotbucket4B0141F9",
            },
            "CERTIFICATE_STORAGE": "s3",
            "DRY_RUN": "False",
            "KEY_TYPE": "ecdsa",
            "LETSENCRYPT_DOMAINS": "test.local, www.test.local",
            "LETSENCRYPT_EMAIL": "test@test.local",
            "NOTIFICATION_SNS_ARN": {
              "Ref": "CertbottopicCA144CF6",
            },
            "OBJECT_PREFIX": "",
            "PREFERRED_CHAIN": "None",
            "REISSUE_DAYS": "30",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "Certbotrole7718327E",
            "Arn",
          ],
        },
        "Runtime": "python3.13",
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Certbotr53PolicyAE23E6E5": {
      "Properties": {
        "Description": "Allow the Certbot function to perform DNS verification.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "route53:ListHostedZones",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "route53:GetChange",
                "route53:ChangeResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:route53:::change/*",
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/DUMMY",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":route53:::hostedzone/",
                      {
                        "Ref": "ZoneA5DE4B68",
                      },
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "Certbotrole7718327E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Ref": "CertbotsnsPolicyB1083589",
          },
          {
            "Ref": "Certbotr53PolicyAE23E6E5",
          },
          {
            "Ref": "CertbotacmPolicy047B0647",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CertbotroleDefaultPolicy6B0533F6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Certbotbucket4B0141F9",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Certbotbucket4B0141F9",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CertbotroleDefaultPolicy6B0533F6",
        "Roles": [
          {
            "Ref": "Certbotrole7718327E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CertbotsnsPolicyB1083589": {
      "Properties": {
        "Description": "Allow the Certbot function to notify an SNS topic upon completion.",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "CertbottopicCA144CF6",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "CertbottopicCA144CF6": {
      "Type": "AWS::SNS::Topic",
    },
    "Certbottopictesttestlocal58092F4B": {
      "Properties": {
        "Endpoint": "test@test.local",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "CertbottopicCA144CF6",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "CertbottriggerAllowEventRuleTestStackCertbothandlerA125D3999C57ECC2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CertbothandlerD1E99A6A",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "CertbottriggerEEDF6DB7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CertbottriggerEEDF6DB7": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 ? * 1 *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CertbothandlerD1E99A6A",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CertbottriggerImmediate08D06D4E": {
      "Properties": {
        "ScheduleExpression": "cron(10 0 14 1 ? 2021)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CertbothandlerD1E99A6A",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CertbottriggerImmediateAllowEventRuleTestStackCertbothandlerA125D39916D7FE46": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CertbothandlerD1E99A6A",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "CertbottriggerImmediate08D06D4E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EfsAccessPoint787A4929": {
      "Properties": {
        "AccessPointTags": [
          {
            "Key": "Name",
            "Value": "TestStack/EfsAccessPoint",
          },
        ],
        "FileSystemId": {
          "Ref": "EfsFileSystem37910666",
        },
        "RootDirectory": {
          "CreationInfo": {
            "OwnerGid": "1000",
            "OwnerUid": "1000",
            "Permissions": "700",
          },
          "Path": "/certs",
        },
      },
      "Type": "AWS::EFS::AccessPoint",
    },
    "EfsFileSystem37910666": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Encrypted": true,
        "FileSystemTags": [
          {
            "Key": "Name",
            "Value": "TestStack/EfsFileSystem",
          },
        ],
      },
      "Type": "AWS::EFS::FileSystem",
      "UpdateReplacePolicy": "Retain",
    },
    "EfsFileSystemEfsMountTarget1FB1E892A": {
      "Properties": {
        "FileSystemId": {
          "Ref": "EfsFileSystem37910666",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EfsFileSystemEfsSecurityGroup68CC9E7F",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "EfsFileSystemEfsMountTarget26C9652B8": {
      "Properties": {
        "FileSystemId": {
          "Ref": "EfsFileSystem37910666",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EfsFileSystemEfsSecurityGroup68CC9E7F",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "EfsFileSystemEfsSecurityGroup68CC9E7F": {
      "Properties": {
        "GroupDescription": "TestStack/EfsFileSystem/EfsSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/EfsFileSystem",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EfsFileSystemEfsSecurityGroupfromTestStackCertbot7handlerSecurityGroup2CE8F2482049DEF3190B": {
      "Properties": {
        "Description": "from TestStackCertbot7handlerSecurityGroup2CE8F248:2049",
        "FromPort": 2049,
        "GroupId": {
          "Fn::GetAtt": [
            "EfsFileSystemEfsSecurityGroup68CC9E7F",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "Certbot7handlerSecurityGroupF7301350",
            "GroupId",
          ],
        },
        "ToPort": 2049,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "KmsKey46693ADD": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "KmsKeyAlias513C0C4A": {
      "Properties": {
        "AliasName": "alias/test",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "KmsKey46693ADD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "TestStack/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "ZoneA5DE4B68": {
      "Properties": {
        "Name": "auth.test.local.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
